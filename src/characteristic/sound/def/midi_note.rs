//! Official Specification:  <https://toio.github.io/toio-spec/en/docs/ble_sound#midi-note-number-and-note-name>

pub use crate::characteristic::motor::def::params::Period;
use crate::payload::ToPayload;

#[derive(Debug, Copy, Clone, PartialEq, Eq)]
pub enum Note {
    C0,
    CS0,
    D0,
    DS0,
    E0,
    F0,
    FS0,
    G0,
    GS0,
    A0,
    AS0,
    B0,
    C1,
    CS1,
    D1,
    DS1,
    E1,
    F1,
    FS1,
    G1,
    GS1,
    A1,
    AS1,
    B1,
    C2,
    CS2,
    D2,
    DS2,
    E2,
    F2,
    FS2,
    G2,
    GS2,
    A2,
    AS2,
    B2,
    C3,
    CS3,
    D3,
    DS3,
    E3,
    F3,
    FS3,
    G3,
    GS3,
    A3,
    AS3,
    B3,
    C4,
    CS4,
    D4,
    DS4,
    E4,
    F4,
    FS4,
    G4,
    GS4,
    A4,
    AS4,
    B4,
    C5,
    CS5,
    D5,
    DS5,
    E5,
    F5,
    FS5,
    G5,
    GS5,
    A5,
    AS5,
    B5,
    C6,
    CS6,
    D6,
    DS6,
    E6,
    F6,
    FS6,
    G6,
    GS6,
    A6,
    AS6,
    B6,
    C7,
    CS7,
    D7,
    DS7,
    E7,
    F7,
    FS7,
    G7,
    GS7,
    A7,
    AS7,
    B7,
    C8,
    CS8,
    D8,
    DS8,
    E8,
    F8,
    FS8,
    G8,
    GS8,
    A8,
    AS8,
    B8,
    C9,
    CS9,
    D9,
    DS9,
    E9,
    F9,
    FS9,
    G9,
    GS9,
    A9,
    AS9,
    B9,
    C10,
    CS10,
    D10,
    DS10,
    E10,
    F10,
    FS10,
    G10,
    NoSound,
}

impl From<Note> for u8 {
    fn from(note: Note) -> u8 {
        match note {
            Note::C0 => 0u8,
            Note::CS0 => 1u8,
            Note::D0 => 2u8,
            Note::DS0 => 3u8,
            Note::E0 => 4u8,
            Note::F0 => 5u8,
            Note::FS0 => 6u8,
            Note::G0 => 7u8,
            Note::GS0 => 8u8,
            Note::A0 => 9u8,
            Note::AS0 => 10u8,
            Note::B0 => 11u8,
            Note::C1 => 12u8,
            Note::CS1 => 13u8,
            Note::D1 => 14u8,
            Note::DS1 => 15u8,
            Note::E1 => 16u8,
            Note::F1 => 17u8,
            Note::FS1 => 18u8,
            Note::G1 => 19u8,
            Note::GS1 => 20u8,
            Note::A1 => 21u8,
            Note::AS1 => 22u8,
            Note::B1 => 23u8,
            Note::C2 => 24u8,
            Note::CS2 => 25u8,
            Note::D2 => 26u8,
            Note::DS2 => 27u8,
            Note::E2 => 28u8,
            Note::F2 => 29u8,
            Note::FS2 => 30u8,
            Note::G2 => 31u8,
            Note::GS2 => 32u8,
            Note::A2 => 33u8,
            Note::AS2 => 34u8,
            Note::B2 => 35u8,
            Note::C3 => 36u8,
            Note::CS3 => 37u8,
            Note::D3 => 38u8,
            Note::DS3 => 39u8,
            Note::E3 => 40u8,
            Note::F3 => 41u8,
            Note::FS3 => 42u8,
            Note::G3 => 43u8,
            Note::GS3 => 44u8,
            Note::A3 => 45u8,
            Note::AS3 => 46u8,
            Note::B3 => 47u8,
            Note::C4 => 48u8,
            Note::CS4 => 49u8,
            Note::D4 => 50u8,
            Note::DS4 => 51u8,
            Note::E4 => 52u8,
            Note::F4 => 53u8,
            Note::FS4 => 54u8,
            Note::G4 => 55u8,
            Note::GS4 => 56u8,
            Note::A4 => 57u8,
            Note::AS4 => 58u8,
            Note::B4 => 59u8,
            Note::C5 => 60u8,
            Note::CS5 => 61u8,
            Note::D5 => 62u8,
            Note::DS5 => 63u8,
            Note::E5 => 64u8,
            Note::F5 => 65u8,
            Note::FS5 => 66u8,
            Note::G5 => 67u8,
            Note::GS5 => 68u8,
            Note::A5 => 69u8,
            Note::AS5 => 70u8,
            Note::B5 => 71u8,
            Note::C6 => 72u8,
            Note::CS6 => 73u8,
            Note::D6 => 74u8,
            Note::DS6 => 75u8,
            Note::E6 => 76u8,
            Note::F6 => 77u8,
            Note::FS6 => 78u8,
            Note::G6 => 79u8,
            Note::GS6 => 80u8,
            Note::A6 => 81u8,
            Note::AS6 => 82u8,
            Note::B6 => 83u8,
            Note::C7 => 84u8,
            Note::CS7 => 85u8,
            Note::D7 => 86u8,
            Note::DS7 => 87u8,
            Note::E7 => 88u8,
            Note::F7 => 89u8,
            Note::FS7 => 90u8,
            Note::G7 => 91u8,
            Note::GS7 => 92u8,
            Note::A7 => 93u8,
            Note::AS7 => 94u8,
            Note::B7 => 95u8,
            Note::C8 => 96u8,
            Note::CS8 => 97u8,
            Note::D8 => 98u8,
            Note::DS8 => 99u8,
            Note::E8 => 100u8,
            Note::F8 => 101u8,
            Note::FS8 => 102u8,
            Note::G8 => 103u8,
            Note::GS8 => 104u8,
            Note::A8 => 105u8,
            Note::AS8 => 106u8,
            Note::B8 => 107u8,
            Note::C9 => 108u8,
            Note::CS9 => 109u8,
            Note::D9 => 110u8,
            Note::DS9 => 111u8,
            Note::E9 => 112u8,
            Note::F9 => 113u8,
            Note::FS9 => 114u8,
            Note::G9 => 115u8,
            Note::GS9 => 116u8,
            Note::A9 => 117u8,
            Note::AS9 => 118u8,
            Note::B9 => 119u8,
            Note::C10 => 120u8,
            Note::CS10 => 121u8,
            Note::D10 => 122u8,
            Note::DS10 => 123u8,
            Note::E10 => 124u8,
            Note::F10 => 125u8,
            Note::FS10 => 126u8,
            Note::G10 => 127u8,
            Note::NoSound => 128u8,
        }
    }
}

#[derive(Debug, Copy, Clone)]
pub struct MidiNote {
    pub volume: u8,
    pub duration: Period,
    pub note: Note,
}

impl ToPayload<Vec<u8>> for MidiNote {
    fn to_payload(self) -> Vec<u8> {
        let mut payload: Vec<u8> = Vec::new();
        payload.push(self.volume);
        payload.extend(self.duration.to_payload());
        payload.push(self.note.into());
        payload
    }
}
